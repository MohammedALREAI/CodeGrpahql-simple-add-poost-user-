const typeDefs = `
#input fields
  input inputUserDelete{
      id:ID!
    }
    input inputPostDelete{
      id:ID!
    }
    input CreateUserInput {
        name: String!
        email: String!
        age: Int
    }
    input udatePostInput{
      title:String,
      body:String,
      published:Boolean
    }

    input CreatePostInput {
        title: String!
        body: String!
        published: Boolean!
        author: ID!
    }

    input CreateCommentInput {
        text: String!
        author: ID!
        post: ID!
    }
# end fields
# Query type
    type Query {
        users(query: String): [User!]!
        posts(query: String): [Post!]!
        comments: [Comment!]!
        me: User!
        post: Post!
    }
# end Query

# start Mutation
    type Mutation {

        createUser(data: CreateUserInput!): User!
        createPost(data: CreatePostInput!): Post!
        deleteUser(data:inputUserDelete):User!
        deletePost(data:inputPostDelete):Post!
        createComment(data: CreateCommentInput!): Comment!
    }
# End Mutation
# Specific type

    type User {
        id: ID!
        name: String!
        email: String!
        age: Int
        posts: [Post!]!
        comments: [Comment!]!
    }

    type Post {
        id: ID!
        title: String!
        body: String!
        published: Boolean!
        author: User!
        comments: [Comment!]!
    }

    type Comment {
        id: ID!
        text: String!
        author: User!
        post: Post!
    }
`
